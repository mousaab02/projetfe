---
- name: Setup Jenkins VM with Docker and monitoring dependencies
  hosts: jenkins_vm
  become: yes
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Remove old Docker packages if any
      apt:
        name:
          - docker
          - docker-engine
          - docker.io
          - containerd
          - runc
        state: absent
        purge: yes

    - name: Install dependencies
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - python3-pip
        state: present

    - name: Create keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Add Docker’s official GPG key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.gpg
        mode: '0644'

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
        state: present

    - name: Update apt cache (after adding Docker repo)
      apt:
        update_cache: yes

    - name: Install Docker packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present

    - name: Enable and start Docker service
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Add current user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Upgrade pip3
      pip:
        name: pip
        state: latest

    - name: Install compatible docker python module
      pip:
        name: docker
        state: latest

    - name: Install docker-compose python module
      pip:
        name: docker-compose
        state: latest

- name: Deploy monitoring tools (Prometheus + Node Exporter)
  hosts: jenkins_vm
  become: yes
  tasks:
    - name: Vérifier si la collection Docker est déjà installée
      stat:
        path: /root/.ansible/collections/ansible_collections/community/docker
      register: docker_collection_installed

    - name: Installer la collection community.docker si elle n’est pas présente
      shell: ansible-galaxy collection install community.docker
      when: not docker_collection_installed.stat.exists

    - name: Créer un dossier /opt/monitoring sur la VM
      file:
        path: /opt/monitoring
        state: directory
        mode: '0755'

    - name: Copier docker-compose.yml
      copy:
        src: /home/azureuser/projetfe/iac-devops/ansible/roles/monitoring/files/docker-compose.yml
        dest: /opt/monitoring/docker-compose.yml

    - name: Copier prometheus.yml
      copy:
        src: /home/azureuser/projetfe/iac-devops/ansible/roles/monitoring/files/prometheus.yml
        dest: /opt/monitoring/prometheus.yml

     - name: Stop and remove existing monitoring containers if they exist
       shell: docker compose down
       args:
         chdir: /opt/monitoring
       ignore_errors: yes

    - name: Lancer les containers Prometheus et Node Exporter
      community.docker.docker_compose_v2:
        project_src: /opt/monitoring
        state: present


- name: Deploy backend and frontend Docker containers
  hosts: jenkins_vm
  become: yes
  tasks:
    - name: Stop and remove backend container if exists
      community.docker.docker_container:
        name: projetfe-backend
        state: absent
        force_kill: yes

    - name: Pull backend image from DockerHub
      community.docker.docker_image:
        name: moulaa22/projetfe-backend
        source: pull

    - name: Run backend container
      community.docker.docker_container:
        name: projetfe-backend
        image: moulaa22/projetfe-backend
        state: started
        restart_policy: always
        ports:
          - "3000:3000"

    - name: Stop and remove frontend container if exists
      community.docker.docker_container:
        name: projetfe-frontend
        state: absent
        force_kill: yes

    - name: Pull frontend image from DockerHub
      community.docker.docker_image:
        name: moulaa22/projetfe-frontend
        source: pull

    - name: Run frontend container
      community.docker.docker_container:
        name: projetfe-frontend
        image: moulaa22/projetfe-frontend
        state: started
        restart_policy: always
        ports:
          - "80:80"
